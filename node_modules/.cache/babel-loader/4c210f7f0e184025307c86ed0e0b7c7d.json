{"remainingRequest":"/home/nacxit/Documentos/Proyectos/Web/ProyectoPasantia/stars-manager-front/node_modules/babel-loader/lib/index.js!/home/nacxit/Documentos/Proyectos/Web/ProyectoPasantia/stars-manager-front/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/nacxit/Documentos/Proyectos/Web/ProyectoPasantia/stars-manager-front/src/views/Comments/Comments.js?vue&type=script&lang=js&","dependencies":[{"path":"/home/nacxit/Documentos/Proyectos/Web/ProyectoPasantia/stars-manager-front/src/views/Comments/Comments.js","mtime":1555280254646},{"path":"/home/nacxit/Documentos/Proyectos/Web/ProyectoPasantia/stars-manager-front/node_modules/cache-loader/dist/cjs.js","mtime":1549926009192},{"path":"/home/nacxit/Documentos/Proyectos/Web/ProyectoPasantia/stars-manager-front/node_modules/babel-loader/lib/index.js","mtime":1549926008785},{"path":"/home/nacxit/Documentos/Proyectos/Web/ProyectoPasantia/stars-manager-front/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1549926008774}],"contextDependencies":[],"result":["import { comments, create } from './Comments.gql';\nexport default {\n  name: 'Comments',\n  data: function data() {\n    return {\n      user: [],\n      event: [],\n      commentList: [],\n      comment: {\n        description: ''\n      }\n    };\n  },\n  apollo: {\n    commentList: {\n      query: comments,\n      variables: function variables() {\n        return {\n          id: this.$route.params.id\n        };\n      }\n    }\n  },\n  computed: {\n    commentListNode: function commentListNode() {\n      if (this.commentList && this.commentList.comments) {\n        return this.commentList.comments.edges.map(function (edge) {\n          return edge.node;\n        });\n      }\n\n      return [];\n    }\n  },\n  methods: {\n    createComments: function createComments() {\n      this.apollo.mutate({\n        mutation: create,\n        variables: {\n          input: {\n            description: this.comment.description,\n            eventId: this.event.id\n          }\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["/home/nacxit/Documentos/Proyectos/Web/ProyectoPasantia/stars-manager-front/src/views/Comments/Comments.js"],"names":["comments","create","name","data","user","event","commentList","comment","description","apollo","query","variables","id","$route","params","computed","commentListNode","edges","map","edge","node","methods","createComments","mutate","mutation","input","eventId"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,MAAlB,QAA+B,gBAA/B;AAEA,eAAe;AACbC,EAAAA,IAAI,EAAE,UADO;AAEbC,EAAAA,IAFa,kBAEN;AACL,WAAO;AACLC,MAAAA,IAAI,EAAE,EADD;AAELC,MAAAA,KAAK,EAAE,EAFF;AAGLC,MAAAA,WAAW,EAAE,EAHR;AAKLC,MAAAA,OAAO,EAAE;AACPC,QAAAA,WAAW,EAAE;AADN;AALJ,KAAP;AASD,GAZY;AAcbC,EAAAA,MAAM,EAAE;AACNH,IAAAA,WAAW,EAAE;AACXI,MAAAA,KAAK,EAAEV,QADI;AAEXW,MAAAA,SAFW,uBAEC;AACV,eAAO;AACLC,UAAAA,EAAE,EAAE,KAAKC,MAAL,CAAYC,MAAZ,CAAmBF;AADlB,SAAP;AAGD;AANU;AADP,GAdK;AAyBbG,EAAAA,QAAQ,EAAE;AACRC,IAAAA,eADQ,6BACU;AAChB,UAAI,KAAKV,WAAL,IAAoB,KAAKA,WAAL,CAAiBN,QAAzC,EAAmD;AACjD,eAAO,KAAKM,WAAL,CAAiBN,QAAjB,CAA0BiB,KAA1B,CAAgCC,GAAhC,CAAoC,UAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACC,IAAT;AAAA,SAAxC,CAAP;AACD;;AACD,aAAO,EAAP;AACD;AANO,GAzBG;AAkCbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,cADO,4BACU;AACf,WAAKb,MAAL,CAAYc,MAAZ,CAAmB;AACjBC,QAAAA,QAAQ,EAAEvB,MADO;AAEjBU,QAAAA,SAAS,EAAE;AACTc,UAAAA,KAAK,EAAE;AACLjB,YAAAA,WAAW,EAAE,KAAKD,OAAL,CAAaC,WADrB;AAELkB,YAAAA,OAAO,EAAE,KAAKrB,KAAL,CAAWO;AAFf;AADE;AAFM,OAAnB;AASD;AAXM;AAlCI,CAAf","sourcesContent":["import {comments, create} from './Comments.gql';\n\nexport default {\n  name: 'Comments',\n  data() {\n    return {\n      user: [],\n      event: [],\n      commentList: [],\n\n      comment: {\n        description: '',\n      },\n    };\n  },\n\n  apollo: {\n    commentList: {\n      query: comments,\n      variables() {\n        return {\n          id: this.$route.params.id,\n        };\n      },\n    },\n  },\n\n  computed: {\n    commentListNode() {\n      if (this.commentList && this.commentList.comments) {\n        return this.commentList.comments.edges.map(edge => edge.node);\n      }\n      return [];\n    },\n  },\n\n  methods: {\n    createComments() {\n      this.apollo.mutate({\n        mutation: create,\n        variables: {\n          input: {\n            description: this.comment.description,\n            eventId: this.event.id,\n          },\n        },\n      });\n    },\n  },\n};\n"]}]}