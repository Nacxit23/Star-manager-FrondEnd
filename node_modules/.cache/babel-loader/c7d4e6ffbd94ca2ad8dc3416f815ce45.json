{"remainingRequest":"/home/nacxit/Documentos/Proyectos/Web/ProyectoPasantia/stars-manager-front/node_modules/babel-loader/lib/index.js!/home/nacxit/Documentos/Proyectos/Web/ProyectoPasantia/stars-manager-front/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js??ref--13-0!/home/nacxit/Documentos/Proyectos/Web/ProyectoPasantia/stars-manager-front/src/views/AdminUsers/AdminUsers.js?vue&type=script&lang=js&","dependencies":[{"path":"/home/nacxit/Documentos/Proyectos/Web/ProyectoPasantia/stars-manager-front/src/views/AdminUsers/AdminUsers.js","mtime":1555974601593},{"path":"/home/nacxit/Documentos/Proyectos/Web/ProyectoPasantia/stars-manager-front/node_modules/cache-loader/dist/cjs.js","mtime":1549926009192},{"path":"/home/nacxit/Documentos/Proyectos/Web/ProyectoPasantia/stars-manager-front/node_modules/babel-loader/lib/index.js","mtime":1549926008785},{"path":"/home/nacxit/Documentos/Proyectos/Web/ProyectoPasantia/stars-manager-front/node_modules/@vue/cli-plugin-eslint/node_modules/eslint-loader/index.js","mtime":1549926008774}],"contextDependencies":[],"result":["import _toConsumableArray from \"/home/nacxit/Documentos/Proyectos/Web/ProyectoPasantia/stars-manager-front/node_modules/@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/home/nacxit/Documentos/Proyectos/Web/ProyectoPasantia/stars-manager-front/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/home/nacxit/Documentos/Proyectos/Web/ProyectoPasantia/stars-manager-front/node_modules/@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport \"core-js/modules/es6.array.find-index\";\nimport * as queries from './AdminUsersQuery.gql';\nexport default {\n  name: 'AdminUsers',\n  inject: ['context'],\n  data: function data() {\n    return {\n      usersAdmin: [],\n      spinnerLoading: false\n    };\n  },\n  apollo: {\n    usersAdmin: {\n      query: queries.usersAdmin\n    }\n  },\n  computed: {\n    allUser: function allUser() {\n      return (this.usersAdmin.edges || []).map(function (edge) {\n        return edge.node;\n      });\n    }\n  },\n  methods: {\n    adminCreate: function adminCreate(userId) {\n      var _this = this;\n\n      this.$apollo.mutate({\n        mutation: queries.createAdmin,\n        variables: {\n          id: userId\n        },\n        update: function update(cache) {\n          var userAdminQuery = {\n            query: queries.usersAdmin\n          };\n          var data = cache.readQuery(userAdminQuery);\n          var userIndex = data.usersAdmin.edges.findIndex(function (_ref) {\n            var node = _ref.node;\n            return node.id == _this.userId;\n          });\n          data.usersAdmin.edges.splice(userIndex, 1);\n          cache.writeQuery(_objectSpread({}, userAdminQuery, {\n            data: data\n          }));\n        }\n      });\n    },\n    loadMore: function () {\n      var _loadMore = _asyncToGenerator(\n      /*#__PURE__*/\n      regeneratorRuntime.mark(function _callee() {\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.spinnerLoading = true;\n                _context.next = 3;\n                return this.$apollo.queries.usersAdmin.fetchMore({\n                  variables: {\n                    curso: this.usersAdmin.pageInfo.endCursor\n                  },\n                  updateQuery: function updateQuery(previousResult, _ref2) {\n                    var usersAdmin = _ref2.fetchMoreResult.usersAdmin;\n                    return {\n                      usersAdmin: {\n                        __typename: previousResult.usersAdmin.__typename,\n                        edges: [].concat(_toConsumableArray(previousResult.usersAdmin.edges), _toConsumableArray(usersAdmin.edges)),\n                        pageInfo: usersAdmin.pageInfo\n                      }\n                    };\n                  }\n                });\n\n              case 3:\n                this.spinnerLoading = false;\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function loadMore() {\n        return _loadMore.apply(this, arguments);\n      }\n\n      return loadMore;\n    }()\n  },\n  beforeRouteEnter: function beforeRouteEnter(to, from, next) {\n    next(function (vm) {\n      if (!vm.context.user.isAdmin) {\n        vm.$router.push('/home/star-manager');\n      }\n    });\n  }\n};",{"version":3,"sources":["/home/nacxit/Documentos/Proyectos/Web/ProyectoPasantia/stars-manager-front/src/views/AdminUsers/AdminUsers.js"],"names":["queries","name","inject","data","usersAdmin","spinnerLoading","apollo","query","computed","allUser","edges","map","edge","node","methods","adminCreate","userId","$apollo","mutate","mutation","createAdmin","variables","id","update","cache","userAdminQuery","readQuery","userIndex","findIndex","splice","writeQuery","loadMore","fetchMore","curso","pageInfo","endCursor","updateQuery","previousResult","fetchMoreResult","__typename","beforeRouteEnter","to","from","next","vm","context","user","isAdmin","$router","push"],"mappings":"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","sourcesContent":["import * as queries from './AdminUsersQuery.gql';\n\nexport default {\n  name: 'AdminUsers',\n\n  inject: ['context'],\n\n  data() {\n    return {\n      usersAdmin: [],\n      spinnerLoading: false,\n    };\n  },\n\n  apollo: {\n    usersAdmin: {\n      query: queries.usersAdmin,\n    },\n  },\n  computed: {\n    allUser() {\n      return (this.usersAdmin.edges || []).map(edge => edge.node);\n    },\n  },\n\n  methods: {\n    adminCreate(userId) {\n      this.$apollo.mutate({\n        mutation: queries.createAdmin,\n        variables: {\n          id: userId,\n        },\n        update: cache => {\n          const userAdminQuery = {\n            query: queries.usersAdmin,\n          };\n          const data = cache.readQuery(userAdminQuery);\n          const userIndex = data.usersAdmin.edges.findIndex(\n            ({node}) => node.id == this.userId\n          );\n\n          data.usersAdmin.edges.splice(userIndex, 1);\n\n          cache.writeQuery({\n            ...userAdminQuery,\n            data: data,\n          });\n        },\n      });\n    },\n\n    async loadMore() {\n      this.spinnerLoading = true;\n      await this.$apollo.queries.usersAdmin.fetchMore({\n        variables: {\n          curso: this.usersAdmin.pageInfo.endCursor,\n        },\n\n        updateQuery: (previousResult, {fetchMoreResult: {usersAdmin}}) => ({\n          usersAdmin: {\n            __typename: previousResult.usersAdmin.__typename,\n            edges: [...previousResult.usersAdmin.edges, ...usersAdmin.edges],\n            pageInfo: usersAdmin.pageInfo,\n          },\n        }),\n      });\n      this.spinnerLoading = false;\n    },\n  },\n\n  beforeRouteEnter(to, from, next) {\n    next(vm => {\n      if (!vm.context.user.isAdmin) {\n        vm.$router.push('/home/star-manager');\n      }\n    });\n  },\n};\n"]}]}